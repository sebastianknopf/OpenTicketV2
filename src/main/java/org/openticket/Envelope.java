// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpenTicket.proto

package org.openticket;

/**
 * <pre>
 **
 * The Envelope message defines basic headers for each ticket and contains
 * at least one signed legitimation as arbitrary byte data.
 * </pre>
 *
 * Protobuf type {@code OpenTicket.Envelope}
 */
public  final class Envelope extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:OpenTicket.Envelope)
    EnvelopeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Envelope.newBuilder() to construct.
  private Envelope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Envelope() {
    envelopeVersion_ = 0;
    keyName_ = "";
    encryptedLegitimations_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Envelope(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            envelopeVersion_ = input.readUInt32();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            keyName_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              encryptedLegitimations_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
              mutable_bitField0_ |= 0x00000004;
            }
            encryptedLegitimations_.add(input.readBytes());
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        encryptedLegitimations_ = java.util.Collections.unmodifiableList(encryptedLegitimations_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return OpenTicket.internal_static_OpenTicket_Envelope_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return OpenTicket.internal_static_OpenTicket_Envelope_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Envelope.class, Envelope.Builder.class);
  }

  private int bitField0_;
  public static final int ENVELOPEVERSION_FIELD_NUMBER = 1;
  private int envelopeVersion_;
  /**
   * <pre>
   * the envelope version for parsing the ticket data
   * </pre>
   *
   * <code>uint32 envelopeVersion = 1;</code>
   */
  public int getEnvelopeVersion() {
    return envelopeVersion_;
  }

  public static final int KEYNAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object keyName_;
  /**
   * <pre>
   * the key name which is used for signing ALL legitimations
   * </pre>
   *
   * <code>string keyName = 2;</code>
   */
  public java.lang.String getKeyName() {
    java.lang.Object ref = keyName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the key name which is used for signing ALL legitimations
   * </pre>
   *
   * <code>string keyName = 2;</code>
   */
  public com.google.protobuf.ByteString
      getKeyNameBytes() {
    java.lang.Object ref = keyName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENCRYPTEDLEGITIMATIONS_FIELD_NUMBER = 3;
  private java.util.List<com.google.protobuf.ByteString> encryptedLegitimations_;
  /**
   * <pre>
   * as many RSA encrypted legitimations as arbitrary binary data
   * </pre>
   *
   * <code>repeated bytes encryptedLegitimations = 3;</code>
   */
  public java.util.List<com.google.protobuf.ByteString>
      getEncryptedLegitimationsList() {
    return encryptedLegitimations_;
  }
  /**
   * <pre>
   * as many RSA encrypted legitimations as arbitrary binary data
   * </pre>
   *
   * <code>repeated bytes encryptedLegitimations = 3;</code>
   */
  public int getEncryptedLegitimationsCount() {
    return encryptedLegitimations_.size();
  }
  /**
   * <pre>
   * as many RSA encrypted legitimations as arbitrary binary data
   * </pre>
   *
   * <code>repeated bytes encryptedLegitimations = 3;</code>
   */
  public com.google.protobuf.ByteString getEncryptedLegitimations(int index) {
    return encryptedLegitimations_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (envelopeVersion_ != 0) {
      output.writeUInt32(1, envelopeVersion_);
    }
    if (!getKeyNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, keyName_);
    }
    for (int i = 0; i < encryptedLegitimations_.size(); i++) {
      output.writeBytes(3, encryptedLegitimations_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (envelopeVersion_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, envelopeVersion_);
    }
    if (!getKeyNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, keyName_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < encryptedLegitimations_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(encryptedLegitimations_.get(i));
      }
      size += dataSize;
      size += 1 * getEncryptedLegitimationsList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Envelope)) {
      return super.equals(obj);
    }
    Envelope other = (Envelope) obj;

    boolean result = true;
    result = result && (getEnvelopeVersion()
        == other.getEnvelopeVersion());
    result = result && getKeyName()
        .equals(other.getKeyName());
    result = result && getEncryptedLegitimationsList()
        .equals(other.getEncryptedLegitimationsList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENVELOPEVERSION_FIELD_NUMBER;
    hash = (53 * hash) + getEnvelopeVersion();
    hash = (37 * hash) + KEYNAME_FIELD_NUMBER;
    hash = (53 * hash) + getKeyName().hashCode();
    if (getEncryptedLegitimationsCount() > 0) {
      hash = (37 * hash) + ENCRYPTEDLEGITIMATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptedLegitimationsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Envelope parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Envelope parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Envelope parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Envelope parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Envelope parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Envelope parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Envelope parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Envelope parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Envelope parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Envelope parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Envelope parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Envelope parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Envelope prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   * The Envelope message defines basic headers for each ticket and contains
   * at least one signed legitimation as arbitrary byte data.
   * </pre>
   *
   * Protobuf type {@code OpenTicket.Envelope}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:OpenTicket.Envelope)
          EnvelopeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenTicket.internal_static_OpenTicket_Envelope_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenTicket.internal_static_OpenTicket_Envelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Envelope.class, Envelope.Builder.class);
    }

    // Construct using de.openticket.Envelope.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      envelopeVersion_ = 0;

      keyName_ = "";

      encryptedLegitimations_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return OpenTicket.internal_static_OpenTicket_Envelope_descriptor;
    }

    @java.lang.Override
    public Envelope getDefaultInstanceForType() {
      return Envelope.getDefaultInstance();
    }

    @java.lang.Override
    public Envelope build() {
      Envelope result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public Envelope buildPartial() {
      Envelope result = new Envelope(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.envelopeVersion_ = envelopeVersion_;
      result.keyName_ = keyName_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        encryptedLegitimations_ = java.util.Collections.unmodifiableList(encryptedLegitimations_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.encryptedLegitimations_ = encryptedLegitimations_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Envelope) {
        return mergeFrom((Envelope)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Envelope other) {
      if (other == Envelope.getDefaultInstance()) return this;
      if (other.getEnvelopeVersion() != 0) {
        setEnvelopeVersion(other.getEnvelopeVersion());
      }
      if (!other.getKeyName().isEmpty()) {
        keyName_ = other.keyName_;
        onChanged();
      }
      if (!other.encryptedLegitimations_.isEmpty()) {
        if (encryptedLegitimations_.isEmpty()) {
          encryptedLegitimations_ = other.encryptedLegitimations_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureEncryptedLegitimationsIsMutable();
          encryptedLegitimations_.addAll(other.encryptedLegitimations_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Envelope parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Envelope) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int envelopeVersion_ ;
    /**
     * <pre>
     * the envelope version for parsing the ticket data
     * </pre>
     *
     * <code>uint32 envelopeVersion = 1;</code>
     */
    public int getEnvelopeVersion() {
      return envelopeVersion_;
    }
    /**
     * <pre>
     * the envelope version for parsing the ticket data
     * </pre>
     *
     * <code>uint32 envelopeVersion = 1;</code>
     */
    public Builder setEnvelopeVersion(int value) {
      
      envelopeVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the envelope version for parsing the ticket data
     * </pre>
     *
     * <code>uint32 envelopeVersion = 1;</code>
     */
    public Builder clearEnvelopeVersion() {
      
      envelopeVersion_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object keyName_ = "";
    /**
     * <pre>
     * the key name which is used for signing ALL legitimations
     * </pre>
     *
     * <code>string keyName = 2;</code>
     */
    public java.lang.String getKeyName() {
      java.lang.Object ref = keyName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the key name which is used for signing ALL legitimations
     * </pre>
     *
     * <code>string keyName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getKeyNameBytes() {
      java.lang.Object ref = keyName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the key name which is used for signing ALL legitimations
     * </pre>
     *
     * <code>string keyName = 2;</code>
     */
    public Builder setKeyName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the key name which is used for signing ALL legitimations
     * </pre>
     *
     * <code>string keyName = 2;</code>
     */
    public Builder clearKeyName() {
      
      keyName_ = getDefaultInstance().getKeyName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the key name which is used for signing ALL legitimations
     * </pre>
     *
     * <code>string keyName = 2;</code>
     */
    public Builder setKeyNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyName_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> encryptedLegitimations_ = java.util.Collections.emptyList();
    private void ensureEncryptedLegitimationsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        encryptedLegitimations_ = new java.util.ArrayList<com.google.protobuf.ByteString>(encryptedLegitimations_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getEncryptedLegitimationsList() {
      return java.util.Collections.unmodifiableList(encryptedLegitimations_);
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public int getEncryptedLegitimationsCount() {
      return encryptedLegitimations_.size();
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public com.google.protobuf.ByteString getEncryptedLegitimations(int index) {
      return encryptedLegitimations_.get(index);
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public Builder setEncryptedLegitimations(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureEncryptedLegitimationsIsMutable();
      encryptedLegitimations_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public Builder addEncryptedLegitimations(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureEncryptedLegitimationsIsMutable();
      encryptedLegitimations_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public Builder addAllEncryptedLegitimations(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureEncryptedLegitimationsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, encryptedLegitimations_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * as many RSA encrypted legitimations as arbitrary binary data
     * </pre>
     *
     * <code>repeated bytes encryptedLegitimations = 3;</code>
     */
    public Builder clearEncryptedLegitimations() {
      encryptedLegitimations_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:OpenTicket.Envelope)
  }

  // @@protoc_insertion_point(class_scope:OpenTicket.Envelope)
  private static final Envelope DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Envelope();
  }

  public static Envelope getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Envelope>
      PARSER = new com.google.protobuf.AbstractParser<Envelope>() {
    @java.lang.Override
    public Envelope parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Envelope(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Envelope> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Envelope> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public Envelope getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

